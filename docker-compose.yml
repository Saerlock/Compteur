version: "3.9"

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    working_dir: /app
    ports:
      - "3000:3000"
    develop: 
      watch: 
        - action: sync
          path: ./frontend/app
          target: /app/app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    depends_on:
      - backend

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /app
    ports:
      - "3001:3001"
    develop: 
      watch: 
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    environment:
      - PG_USER=counter
      - PG_PASSWORD=counter
      - PG_DB=counter
      - PG_PORT=5432
      - PG_HOST=counter-db
    depends_on:
      - counter-db

  counter-db:
    container_name: counter-db
    image: postgres:latest
    environment:
      - POSTGRES_DB=counter
      - POSTGRES_USER=counter
      - POSTGRES_PASSWORD=counter
    ports:
      - "5432:5432"
    volumes:
      - counter-data:/var/lib/postgresql/data
  
  counter-pgadmin:
    container_name: counter-pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin4
    ports:
      - '5050:80'
    depends_on:
      - counter-db

  nginx:
    container_name: nginx
    image: nginx:alpine
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "3040:80"

volumes:
  counter-data: {}